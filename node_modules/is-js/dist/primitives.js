"use strict";
// User-defined type guards for Javascript primitives
Object.defineProperty(exports, "__esModule", { value: true });
exports.nil = exports.symbol = exports.undef = exports.bigint = exports.bool = exports.number = exports.string = void 0;
/**
 * Determines if the argument is a string.
 *
 * @param value - Value in question
 * @returns `true` if the given argument is a string
 */
function string(value) {
    return typeof value === "string" || value instanceof String;
}
exports.string = string;
/**
 * Determines if the argument is a number
 *
 * @param value - Value in question
 * @returns `true` if the given argument is a number
 */
function number(value) {
    return typeof value === "number" || value instanceof Number;
}
exports.number = number;
/**
 * Determines if the argument is a boolean
 *
 * @param value - Value in question
 * @returns `true` if the given argument is a boolean
 */
function bool(value) {
    return value === true || value === false || value instanceof Boolean;
}
exports.bool = bool;
/**
 * Determines if the argument is a BigInt
 *
 * @remarks
 * This method does not support polyfilled BigInt implementations; please defer
 * to the library in use to determine the type of an unknown argument.
 *
 * @param value - Value in question
 * @returns `true` if the given argument is a native BigInt
 */
function bigint(value) {
    return typeof value === "bigint";
}
exports.bigint = bigint;
/**
 * Determines if the argument is undefined
 *
 * @param value - Value in question
 * @returns `true` if the given argument is `undefined`
 */
function undef(value) {
    return value === undefined;
}
exports.undef = undef;
/**
 * Determines if the argument is a symbol
 *
 * @param value - Value in question
 * @returns `true` if the given argument is a symbol
 */
function symbol(value) {
    // TODO
    return typeof value === "symbol";
}
exports.symbol = symbol;
/**
 * Determines if the argument is null
 *
 * @param value - Value in question
 * @returns `true` if the given argument is null
 */
function nil(value) {
    return value === null;
}
exports.nil = nil;
