/**
 * Determines if the argument is a string.
 *
 * @param value - Value in question
 * @returns `true` if the given argument is a string
 */
export declare function string(value: unknown): value is string;
/**
 * Determines if the argument is a number
 *
 * @param value - Value in question
 * @returns `true` if the given argument is a number
 */
export declare function number(value: unknown): value is number;
/**
 * Determines if the argument is a boolean
 *
 * @param value - Value in question
 * @returns `true` if the given argument is a boolean
 */
export declare function bool(value: unknown): value is boolean;
/**
 * Determines if the argument is a BigInt
 *
 * @remarks
 * This method does not support polyfilled BigInt implementations; please defer
 * to the library in use to determine the type of an unknown argument.
 *
 * @param value - Value in question
 * @returns `true` if the given argument is a native BigInt
 */
export declare function bigint(value: unknown): boolean;
/**
 * Determines if the argument is undefined
 *
 * @param value - Value in question
 * @returns `true` if the given argument is `undefined`
 */
export declare function undef(value: unknown): value is undefined;
/**
 * Determines if the argument is a symbol
 *
 * @param value - Value in question
 * @returns `true` if the given argument is a symbol
 */
export declare function symbol(value: unknown): value is Symbol;
/**
 * Determines if the argument is null
 *
 * @param value - Value in question
 * @returns `true` if the given argument is null
 */
export declare function nil(value: unknown): value is null;
